//------------------------------------------------------------------------------
// <auto-generated>
//    Ten kod źródłowy został wygenerowany na podstawie szablonu.
//
//    Ręczne modyfikacje tego pliku mogą spowodować nieoczekiwane zachowanie aplikacji.
//    Ręczne modyfikacje tego pliku zostaną zastąpione w przypadku ponownego wygenerowania kodu.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Powerfront.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class chatEntities : DbContext
    {
        public chatEntities()
            : base("name=chatEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Conversation> Conversation { get; set; }
        public DbSet<Messages> Messages { get; set; }
        public DbSet<Operator> Operator { get; set; }
        public DbSet<Visitor> Visitor { get; set; }
    
        public virtual ObjectResult<OperatorProductivity_Result> OperatorProductivity(string website, string device, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var deviceParameter = device != null ?
                new ObjectParameter("Device", device) :
                new ObjectParameter("Device", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperatorProductivity_Result>("OperatorProductivity", websiteParameter, deviceParameter, startDateParameter, endDateParameter);
        }
    }
}
